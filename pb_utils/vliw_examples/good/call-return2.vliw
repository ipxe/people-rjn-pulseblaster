//More complex example of CALL and RETURN (with nesting).
//Main program calls First Sub, which calls 2nd sub.

//NOTE deliberate "errors".
// 1. The First Sub Calls into the 2nd sub a bit too "late". (It calls Addr 27, but Sub 2 starts at Addr 25). 
//    The program still runs, and this error cannot be caught at the VLIW stage.

// 2. Note that there are more CALLs than RETURNs. This is perfectly OK; it does demonstrate why pb_asm
//    can't track an imbalance (in the number of CALLs and RETURNs) as a potential problem.

// 3. At address 24, (marked 'Short!') we are trying to return *twice* from Sub 2 to main. We might want to do this without changing
//    the outputs, nor a delay. Neither is possible. The "Short" delay is increased from 90ns to make it visible as a brief flash.


//OUTPUT	OPCODE 		ARG	LENGTH		//comment

0x00		cont		-	100000000	//all off 1 sec
0x01		cont		-	100000000	//bit 1 on 1 sec

0x80		CALL		5	100000000	//bit 7 on. CALL 1st Sub
0xff00		cont		-	100000000	//bits 15,8 on. 1 second.

0xffff		goto		0	200000000	//all on 2 sec. goto start.


//First Subroutine:					//Blink bit 1 (5 times quickly, 1 sec total)
0x01		cont		-	20000000	// ADDR = 5
0x00		cont		-	20000000
0x01		cont		-	20000000
0x00		cont		-	20000000
0x01		cont		-	20000000
0x00		cont		-	20000000
0x01		cont		-	20000000
0x00		cont		-	20000000
0x01		cont		-	20000000
0x00		CALL		27	20000000	//Call 2nd Sub

0x01		cont		-	20000000	//Blink bit 1 (4 times fast)
0x00		cont		-	20000000
0x01		cont		-	20000000
0x00		cont		-	20000000
0x01		cont		-	20000000
0x00		cont		-	20000000
0x01		cont		-	20000000
0x00		CALL		27	20000000
0xffff		RETURN		-	 5000000	//Short!


//Second Subroutine:					//Blink bit 7 (3 times, slightly less fast, 3 sec total)
0x80		cont		-	100000000	//ADDR = 25
0x00		cont		-	100000000
0x80		cont		-	100000000
0x00		cont		-	100000000
0x80		cont		-	100000000
0x00		RETURN		-	100000000

